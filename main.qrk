{
  # Taking first argument as command
  (import "io.qrk")
  (let command (index std:args 0))

  (if (or (= command "update") (= command "upgrade")) {
    (let latestRelease quark:release)
    (if (!= version latestRelease) {
      (print "New release found:" latestRelease)
    } (return (print "No new releases found...")))
  })

  (let version (fn () {
    (import "configuration.qrk")

    (let file ".quarkrc")
    (let content (fs:read (fs:join fs:root file)))
    (let config (parseConfiguration content))

    (return (getProperty config "version"))
  }))

  # Checking if command is not defined and returning REPL
  (if (or (= command none) (= command "repl")) {
    (import "repl.qrk")
    (repl (version))
    (return none)
  })

  # Checking for help command
  (if (or (= command "-h") (= command "--help")) (import "commands/help.qrk"))

  # Checking for run command
  (if (or (!= content none) (= command "run")) (import "commands/run.qrk"))
}